---

resources:
- name: commons
  type: git
  icon: git
  source:
    .: (( inject meta.upstream.commons ))

- name: source
  type: git
  icon: git
  source:
    .: (( inject meta.repository.source ))

- name: alpine
  type: registry-image
  icon: pine-tree
  source:
    repository: (( grab meta.upstream.alpine.repo ))
    tag: (( grab meta.upstream.alpine.tag ))
    .: (( inject meta.upstream.alpine.auth ))

- name: debian
  type: registry-image
  icon: docker
  source:
    repository: (( grab meta.upstream.debian.repo ))
    tag: (( grab meta.upstream.debian.tag ))
    .: (( inject meta.upstream.debian.auth ))

- name: vault-init-alpine
  type: registry-image
  icon: docker
  source:
    repository: (( grab meta.registry.image.repo ))
    tag: (( grab meta.registry.image.tag ))
    .: (( inject meta.registry.auth ))

- name: vault-init-debian
  type: registry-image
  icon: docker
  source:
    repository: (( grab meta.registry.image.repo ))
    tag: (( concat "debian-" meta.registry.image.tag ))
    .: (( inject meta.registry.auth ))

jobs:
- name: "go test"
  public: true
  plan:
  - get: source
    trigger: true
  - task: "run tests"
    file: (( grab meta.tasks.golang-test ))

- name: "go vet"
  public: true
  plan:
  - get: source
    trigger: true
  - task: "vet code"
    file: (( grab meta.tasks.golang-vet ))

- name: "build vault-init:alpine"
  public: true
  plan:
  - get: commons
  - get: alpine
    trigger: true
  - get: source
    trigger: true
    passed:
    - "go test"
  - task: "build image"
    file: (( grab meta.tasks.img-build-oci ))
    privileged: true
    params:
      CONTEXT: (( grab meta.registry.image.context ))
      DOCKERFILE: "Dockerfile"
  - task: "write image tags"
    file: (( grab meta.tasks.img-write-tags ))
    params:
      TAGS: (( grab meta.version ))
  - put: vault-init-alpine
    params:
      image: image/image.tar
      additional_tags: metadata/additional_tags

- name: "build vault-init:debian"
  public: true
  plan:
  - get: commons
  - get: debian
    trigger: true
  - get: source
    trigger: true
    passed:
    - "go test"
  - task: "build image"
    file: (( grab meta.tasks.img-build-oci ))
    privileged: true
    params:
      CONTEXT: (( grab meta.registry.image.context ))
      DOCKERFILE: "Dockerfile.debian"
  - task: "write image tags"
    file: (( grab meta.tasks.img-write-tags ))
    params:
      TAGS: (( concat meta.version "-debian" ))
  - put: vault-init-debian
    params:
      image: image/image.tar
      additional_tags: metadata/additional_tags
